// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameTBuildService = "t_build_services"

// TBuildService mapped from table <t_build_services>
type TBuildService struct {
	ID          int64  `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true" json:"id"`
	SvcName     string `gorm:"column:svc_name;type:text;comment:gitlab构建的服务名称" json:"svc_name"`                                   // gitlab构建的服务名称
	Version     string `gorm:"column:version;type:text;comment:gitlab构建服务的vX.Y.Z版本" json:"version"`                               // gitlab构建服务的vX.Y.Z版本
	ImageTag    string `gorm:"column:image_tag;type:text;comment:gitlab构建服务的当前commit short hash 作为image tag" json:"image_tag"`    // gitlab构建服务的当前commit short hash 作为image tag
	BranchName  string `gorm:"column:branch_name;type:text;comment:gitlab构建服务的当前发布分支名称，hotfix/release vX.Y.Z" json:"branch_name"` // gitlab构建服务的当前发布分支名称，hotfix/release vX.Y.Z
	BuildCommit string `gorm:"column:build_commit;type:text;comment:gitlab构建服务的当前commit完整hash" json:"build_commit"`               // gitlab构建服务的当前commit完整hash
	CiEndType   int32  `gorm:"column:ci_end_type;type:integer;comment:该构建服务属于前端还是后端，前端可能走cdn，作为区分处理" json:"ci_end_type"`          // 该构建服务属于前端还是后端，前端可能走cdn，作为区分处理
	MonoName    string `gorm:"column:mono_name;type:text;comment:该服务的仓库类型,可null，大仓时存在 会平铺成多条记录，存在N:1关系" json:"mono_name"`         // 该服务的仓库类型,可null，大仓时存在 会平铺成多条记录，存在N:1关系
	CreateAt    int64  `gorm:"column:create_at;type:bigint" json:"create_at"`
	UpdateAt    int64  `gorm:"column:update_at;type:bigint" json:"update_at"`
	DeleteAt    int64  `gorm:"column:delete_at;type:bigint" json:"delete_at"`
}

// TableName TBuildService's table name
func (*TBuildService) TableName() string {
	return TableNameTBuildService
}
